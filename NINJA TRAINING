***NINJA TRAINING*****
import java.util.Arrays;
public class Solution {
    public static int ninjaTraining(int n, int points[][]) {
      int dp[][] = new int[n][4];
        for (int[] row : dp)
            Arrays.fill(row, -1);

        return helper(n-1,3,points,dp);

    }
    public static int helper(int day,int last,int p[][],int dp[][])
    {
        if(dp[day][last]!=-1)return dp[day][last];

        if(day==0)
        {
            int max=0;
            for(int t=0;t<3;t++)
            {
                if(t!=last)
                {
                    max=Math.max(p[0][t],max);
                }
            }
        return dp[day][last]=max;


        }
        int max=0;
        for(int t=0;t<3;t++)
        {
            if(t!=last)
            {
                int p1=p[day][t]+helper(day-1,t,p,dp);
                max=Math.max(max,p1);
            }
        }
    return dp[day][last]=max;

    }


}
