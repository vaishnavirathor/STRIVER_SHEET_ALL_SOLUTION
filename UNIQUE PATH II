********UNIQUE PATH 2*********
class Solution {
    public int uniquePathsWithObstacles(int[][] o) {
       int n = o.length;
        int m = o[0].length;
        int[][] dp = new int[n][m];

        for (int[] row : dp) {
            Arrays.fill(row, -1);
        }

        return helper(o, n - 1, m - 1, dp);
    }

    public static int helper(int[][] o, int i, int j, int[][] dp) {
        if (i < 0 || j < 0) return 0;
        if (o[i][j] == 1) return 0; 
        if (i == 0 && j == 0) return 1;

        if (dp[i][j] != -1) return dp[i][j];

        int up = helper(o, i - 1, j, dp);
        int left = helper(o, i, j - 1, dp);

        return dp[i][j] = up + left;
    }

    }
